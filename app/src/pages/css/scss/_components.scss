.scrollBtn {
    font-size: 1vw;
    display: flex;
    justify-content: center;
    align-items: center;
    aspect-ratio: 1/1;
    margin: 10px;
    outline: none;
    overflow: hidden;
    position: static;
    background-color: transparent;
    z-index: 3;
    border-radius: 50%;
    opacity: 0.5;
    color: $blue-2;
    transition: $dwellTime/2;

    &:hover {
        color: $blue-light;
        background-color: $blue-2;
    }
}

.dwellBtn {
    color: $blue-2;
    font-size: 20px;
    box-sizing: border-box;
    border: 2px solid $white;
    border-radius: 6px;
    background-color: $blue-light;
    transition: $dwellTime;
    outline: none;
    overflow: hidden;
    position: relative;

    &:before {
        content: '';
        background: $darkblue;
        width: 5em;
        height: 5em;
        display: inline-block;
        position: absolute;
        top: 50%;
        left: 50%;

        margin: {
            left: (5em / -2);
            top: (5em / -2);
        }

        border-radius: 50%;
        opacity: 0;
        transform: scale(1);
        transition: 
            opacity $dwellTime cubic-bezier(0, 0, .2, 1),
            transform $dwellTime cubic-bezier(0, 0, .2, 1);
    }

    &:hover {
        color: $blue-light;
        background-color: $blue-2;

        &:before {
            opacity: 0.6;
            transform: scale(0);
        }
    }
}

@mixin keyboardDwellBtn($animationIteration) {
    transition: $keyboardDwellTime;

    &:before {
        content: '';
        background: #4acbe0;
        width: 5em;
        height: 5em;
        display: inline-block;
        position: absolute;
        top: 50%;
        left: 50%;
        overflow: hidden;
        border-radius: 50%;
        opacity: 0;
        margin: {
            left: (5em / -2);
            top: (5em / -2);
        }
    }

    &:hover {
        background-color: #4acee075;
        padding: 20px;
        animation: keydown $keyboardDwellTime cubic-bezier(0, 0, 0.2, 1) $animationIteration;

        &:before {
            animation: keyboardDwellAnimation-circle $keyboardDwellTime ease-in $animationIteration;
        }
    }
}

.keyboardDwellBtnInfinite {
    @include keyboardDwellBtn(infinite);
}

.keyboardDwellBtnOnce {
    @include keyboardDwellBtn(1);
}

#dialog {
    display: none;
    width: 100%;
    height: calc(100vh - #{$navHeight});
    background-color: rgba($bluegrey, 0.1);
    margin: 0 auto;
    z-index: 5;
    position: absolute;

    #dialogBox {
        display: flex;
        border-radius: 10px;
        box-shadow: -10px 3px 40px -15px $lightgrey;
        width: 15em;
        background: $white;
        padding: 2em;
        font-size: 21px;
        position: absolute;
        top: 15em;
        left: 50%;
        transform: translateX(-50%);
        justify-content: center;
        align-items: center;
        flex-direction: column;

        #dialogSuccess {
            color: $dark-green;
            display: none;
            margin-bottom: 10px;
            vertical-align: top;
        }

        #dialogError {
            color: $red;
            display: none;
            margin-bottom: 10px;
            vertical-align: top;
        }

        #dialogMessage {
            font-family: sans-serif;
            margin-top: 20px;
            color: $bluegrey;
        }
    }
}